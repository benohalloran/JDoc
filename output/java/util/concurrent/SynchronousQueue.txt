Compiled from "SynchronousQueue.java"
public class java.util.concurrent.SynchronousQueue<E> extends java.util.AbstractQueue<E> implements java.util.concurrent.BlockingQueue<E>, java.io.Serializable {
  public java.util.concurrent.SynchronousQueue();
  public java.util.concurrent.SynchronousQueue(boolean);
  public void put(E) throws java.lang.InterruptedException;
  public boolean offer(E, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
  public boolean offer(E);
  public E take() throws java.lang.InterruptedException;
  public E poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
  public E poll();
  public boolean isEmpty();
  public int size();
  public int remainingCapacity();
  public void clear();
  public boolean contains(java.lang.Object);
  public boolean remove(java.lang.Object);
  public boolean containsAll(java.util.Collection<?>);
  public boolean removeAll(java.util.Collection<?>);
  public boolean retainAll(java.util.Collection<?>);
  public E peek();
  public java.util.Iterator<E> iterator();
  public java.lang.Object[] toArray();
  public <T extends java/lang/Object> T[] toArray(T[]);
  public int drainTo(java.util.Collection<? super E>);
  public int drainTo(java.util.Collection<? super E>, int);
}
