Compiled from "CharBuffer.java"
public abstract class java.nio.CharBuffer extends java.nio.Buffer implements java.lang.Comparable<java.nio.CharBuffer>, java.lang.CharSequence, java.lang.Appendable, java.lang.Readable {
  java.nio.CharBuffer();
  public static java.nio.CharBuffer allocate(int);
  public static java.nio.CharBuffer wrap(char[]);
  public static java.nio.CharBuffer wrap(char[], int, int);
  public static java.nio.CharBuffer wrap(java.lang.CharSequence);
  public static java.nio.CharBuffer wrap(java.lang.CharSequence, int, int);
  public final char[] array();
  public final int arrayOffset();
  public abstract java.nio.CharBuffer asReadOnlyBuffer();
  public final char charAt(int);
  public abstract java.nio.CharBuffer compact();
  public int compareTo(java.nio.CharBuffer);
  public abstract java.nio.CharBuffer duplicate();
  public boolean equals(java.lang.Object);
  public abstract char get();
  public java.nio.CharBuffer get(char[]);
  public java.nio.CharBuffer get(char[], int, int);
  public abstract char get(int);
  public final boolean hasArray();
  public int hashCode();
  public abstract boolean isDirect();
  public final int length();
  public abstract java.nio.ByteOrder order();
  public abstract java.nio.CharBuffer put(char);
  public final java.nio.CharBuffer put(char[]);
  public java.nio.CharBuffer put(char[], int, int);
  public java.nio.CharBuffer put(java.nio.CharBuffer);
  public abstract java.nio.CharBuffer put(int, char);
  public final java.nio.CharBuffer put(java.lang.String);
  public java.nio.CharBuffer put(java.lang.String, int, int);
  public abstract java.nio.CharBuffer slice();
  public abstract java.nio.CharBuffer subSequence(int, int);
  public java.lang.String toString();
  public java.nio.CharBuffer append(char);
  public java.nio.CharBuffer append(java.lang.CharSequence);
  public java.nio.CharBuffer append(java.lang.CharSequence, int, int);
  public int read(java.nio.CharBuffer) throws java.io.IOException;
  public java.lang.Object array();
  public int compareTo(java.lang.Object);
  public java.lang.CharSequence subSequence(int, int);
  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
  public java.lang.Appendable append(char) throws java.io.IOException;
}
