Compiled from "ClassLoader.java"
public abstract class java.lang.ClassLoader {
  protected java.lang.ClassLoader();
  protected java.lang.ClassLoader(java.lang.ClassLoader);
  public static java.lang.ClassLoader getSystemClassLoader();
  public static java.net.URL getSystemResource(java.lang.String);
  public static java.util.Enumeration<java.net.URL> getSystemResources(java.lang.String) throws java.io.IOException;
  public static java.io.InputStream getSystemResourceAsStream(java.lang.String);
  protected final java.lang.Class<?> defineClass(byte[], int, int) throws java.lang.ClassFormatError;
  protected final java.lang.Class<?> defineClass(java.lang.String, byte[], int, int) throws java.lang.ClassFormatError;
  protected final java.lang.Class<?> defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain) throws java.lang.ClassFormatError;
  protected final java.lang.Class<?> defineClass(java.lang.String, java.nio.ByteBuffer, java.security.ProtectionDomain) throws java.lang.ClassFormatError;
  protected java.lang.Class<?> findClass(java.lang.String) throws java.lang.ClassNotFoundException;
  protected final java.lang.Class<?> findLoadedClass(java.lang.String);
  protected final java.lang.Class<?> findSystemClass(java.lang.String) throws java.lang.ClassNotFoundException;
  public final java.lang.ClassLoader getParent();
  public java.net.URL getResource(java.lang.String);
  public java.util.Enumeration<java.net.URL> getResources(java.lang.String) throws java.io.IOException;
  public java.io.InputStream getResourceAsStream(java.lang.String);
  public java.lang.Class<?> loadClass(java.lang.String) throws java.lang.ClassNotFoundException;
  protected java.lang.Class<?> loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException;
  protected final void resolveClass(java.lang.Class<?>);
  protected java.net.URL findResource(java.lang.String);
  protected java.util.Enumeration<java.net.URL> findResources(java.lang.String) throws java.io.IOException;
  protected java.lang.String findLibrary(java.lang.String);
  protected java.lang.Package getPackage(java.lang.String);
  protected java.lang.Package[] getPackages();
  protected java.lang.Package definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL) throws java.lang.IllegalArgumentException;
  protected final void setSigners(java.lang.Class<?>, java.lang.Object[]);
  public void setClassAssertionStatus(java.lang.String, boolean);
  public void setPackageAssertionStatus(java.lang.String, boolean);
  public void setDefaultAssertionStatus(boolean);
  public void clearAssertionStatus();
}
