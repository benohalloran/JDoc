Compiled from "SecurityManager.java"
public class java.lang.SecurityManager {
  protected boolean inCheck;
  public java.lang.SecurityManager();
  public void checkAccept(java.lang.String, int);
  public void checkAccess(java.lang.Thread);
  public void checkAccess(java.lang.ThreadGroup);
  public void checkConnect(java.lang.String, int);
  public void checkConnect(java.lang.String, int, java.lang.Object);
  public void checkCreateClassLoader();
  public void checkDelete(java.lang.String);
  public void checkExec(java.lang.String);
  public void checkExit(int);
  public void checkLink(java.lang.String);
  public void checkListen(int);
  public void checkMemberAccess(java.lang.Class<?>, int);
  public void checkMulticast(java.net.InetAddress);
  public void checkMulticast(java.net.InetAddress, byte);
  public void checkPackageAccess(java.lang.String);
  public void checkPackageDefinition(java.lang.String);
  public void checkPropertiesAccess();
  public void checkPropertyAccess(java.lang.String);
  public void checkRead(java.io.FileDescriptor);
  public void checkRead(java.lang.String);
  public void checkRead(java.lang.String, java.lang.Object);
  public void checkSecurityAccess(java.lang.String);
  public void checkSetFactory();
  public boolean checkTopLevelWindow(java.lang.Object);
  public void checkSystemClipboardAccess();
  public void checkAwtEventQueueAccess();
  public void checkPrintJobAccess();
  public void checkWrite(java.io.FileDescriptor);
  public void checkWrite(java.lang.String);
  public boolean getInCheck();
  protected java.lang.Class[] getClassContext();
  protected java.lang.ClassLoader currentClassLoader();
  protected int classLoaderDepth();
  protected java.lang.Class<?> currentLoadedClass();
  protected int classDepth(java.lang.String);
  protected boolean inClass(java.lang.String);
  protected boolean inClassLoader();
  public java.lang.ThreadGroup getThreadGroup();
  public java.lang.Object getSecurityContext();
  public void checkPermission(java.security.Permission);
  public void checkPermission(java.security.Permission, java.lang.Object);
}
