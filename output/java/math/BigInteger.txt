Compiled from "BigInteger.java"
public class java.math.BigInteger extends java.lang.Number implements java.lang.Comparable<java.math.BigInteger>, java.io.Serializable {
  public static final java.math.BigInteger ONE;
  public static final java.math.BigInteger TEN;
  public static final java.math.BigInteger ZERO;
  public java.math.BigInteger(int, java.util.Random);
  public java.math.BigInteger(int, int, java.util.Random);
  public java.math.BigInteger(java.lang.String);
  public java.math.BigInteger(java.lang.String, int);
  public java.math.BigInteger(int, byte[]);
  public java.math.BigInteger(byte[]);
  public static java.math.BigInteger valueOf(long);
  public byte[] toByteArray();
  public java.math.BigInteger abs();
  public java.math.BigInteger negate();
  public java.math.BigInteger add(java.math.BigInteger);
  public java.math.BigInteger subtract(java.math.BigInteger);
  public int signum();
  public java.math.BigInteger shiftRight(int);
  public java.math.BigInteger shiftLeft(int);
  public int bitLength();
  public boolean testBit(int);
  public java.math.BigInteger setBit(int);
  public java.math.BigInteger clearBit(int);
  public java.math.BigInteger flipBit(int);
  public int getLowestSetBit();
  public int bitCount();
  public java.math.BigInteger not();
  public java.math.BigInteger and(java.math.BigInteger);
  public java.math.BigInteger or(java.math.BigInteger);
  public java.math.BigInteger xor(java.math.BigInteger);
  public java.math.BigInteger andNot(java.math.BigInteger);
  public int intValue();
  public long longValue();
  public float floatValue();
  public double doubleValue();
  public int compareTo(java.math.BigInteger);
  public java.math.BigInteger min(java.math.BigInteger);
  public java.math.BigInteger max(java.math.BigInteger);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  public java.lang.String toString(int);
  public java.math.BigInteger gcd(java.math.BigInteger);
  public java.math.BigInteger multiply(java.math.BigInteger);
  public java.math.BigInteger pow(int);
  public java.math.BigInteger[] divideAndRemainder(java.math.BigInteger);
  public java.math.BigInteger divide(java.math.BigInteger);
  public java.math.BigInteger remainder(java.math.BigInteger);
  public java.math.BigInteger modInverse(java.math.BigInteger);
  public java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger);
  public java.math.BigInteger mod(java.math.BigInteger);
  public boolean isProbablePrime(int);
  public java.math.BigInteger nextProbablePrime();
  public static java.math.BigInteger probablePrime(int, java.util.Random);
  public int compareTo(java.lang.Object);
  static {};
}
