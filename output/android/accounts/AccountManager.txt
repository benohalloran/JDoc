Compiled from "AccountManager.java"
public class android.accounts.AccountManager {
  public static final java.lang.String ACTION_AUTHENTICATOR_INTENT;
  public static final java.lang.String AUTHENTICATOR_ATTRIBUTES_NAME;
  public static final java.lang.String AUTHENTICATOR_META_DATA_NAME;
  public static final int ERROR_CODE_BAD_ARGUMENTS;
  public static final int ERROR_CODE_BAD_AUTHENTICATION;
  public static final int ERROR_CODE_BAD_REQUEST;
  public static final int ERROR_CODE_CANCELED;
  public static final int ERROR_CODE_INVALID_RESPONSE;
  public static final int ERROR_CODE_NETWORK_ERROR;
  public static final int ERROR_CODE_REMOTE_EXCEPTION;
  public static final int ERROR_CODE_UNSUPPORTED_OPERATION;
  public static final java.lang.String KEY_ACCOUNTS;
  public static final java.lang.String KEY_ACCOUNT_AUTHENTICATOR_RESPONSE;
  public static final java.lang.String KEY_ACCOUNT_MANAGER_RESPONSE;
  public static final java.lang.String KEY_ACCOUNT_NAME;
  public static final java.lang.String KEY_ACCOUNT_TYPE;
  public static final java.lang.String KEY_ANDROID_PACKAGE_NAME;
  public static final java.lang.String KEY_AUTHENTICATOR_TYPES;
  public static final java.lang.String KEY_AUTHTOKEN;
  public static final java.lang.String KEY_AUTH_FAILED_MESSAGE;
  public static final java.lang.String KEY_AUTH_TOKEN_LABEL;
  public static final java.lang.String KEY_BOOLEAN_RESULT;
  public static final java.lang.String KEY_CALLER_PID;
  public static final java.lang.String KEY_CALLER_UID;
  public static final java.lang.String KEY_ERROR_CODE;
  public static final java.lang.String KEY_ERROR_MESSAGE;
  public static final java.lang.String KEY_INTENT;
  public static final java.lang.String KEY_PASSWORD;
  public static final java.lang.String KEY_USERDATA;
  public static final java.lang.String LOGIN_ACCOUNTS_CHANGED_ACTION;
  android.accounts.AccountManager();
  public static android.accounts.AccountManager get(android.content.Context);
  public java.lang.String getPassword(android.accounts.Account);
  public java.lang.String getUserData(android.accounts.Account, java.lang.String);
  public android.accounts.AuthenticatorDescription[] getAuthenticatorTypes();
  public android.accounts.Account[] getAccounts();
  public android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String, java.lang.String);
  public android.accounts.Account[] getAccountsByType(java.lang.String);
  public android.accounts.AccountManagerFuture<java.lang.Boolean> hasFeatures(android.accounts.Account, java.lang.String[], android.accounts.AccountManagerCallback<java.lang.Boolean>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.accounts.Account[]> getAccountsByTypeAndFeatures(java.lang.String, java.lang.String[], android.accounts.AccountManagerCallback<android.accounts.Account[]>, android.os.Handler);
  public boolean addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle);
  public android.accounts.AccountManagerFuture<java.lang.Boolean> removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback<java.lang.Boolean>, android.os.Handler);
  public void invalidateAuthToken(java.lang.String, java.lang.String);
  public java.lang.String peekAuthToken(android.accounts.Account, java.lang.String);
  public void setPassword(android.accounts.Account, java.lang.String);
  public void clearPassword(android.accounts.Account);
  public void setUserData(android.accounts.Account, java.lang.String, java.lang.String);
  public void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String);
  public java.lang.String blockingGetAuthToken(android.accounts.Account, java.lang.String, boolean) throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException;
  public android.accounts.AccountManagerFuture<android.os.Bundle> getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> getAuthToken(android.accounts.Account, java.lang.String, boolean, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, boolean, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> addAccount(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> updateCredentials(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> editProperties(java.lang.String, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public android.accounts.AccountManagerFuture<android.os.Bundle> getAuthTokenByFeatures(java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler);
  public static android.content.Intent newChooseAccountIntent(android.accounts.Account, java.util.ArrayList<android.accounts.Account>, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle);
  public void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean);
  public void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener);
}
