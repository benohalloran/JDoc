Compiled from "AudioTrack.java"
public class android.media.AudioTrack {
  public static final int ERROR;
  public static final int ERROR_BAD_VALUE;
  public static final int ERROR_INVALID_OPERATION;
  public static final int MODE_STATIC;
  public static final int MODE_STREAM;
  public static final int PLAYSTATE_PAUSED;
  public static final int PLAYSTATE_PLAYING;
  public static final int PLAYSTATE_STOPPED;
  public static final int STATE_INITIALIZED;
  public static final int STATE_NO_STATIC_DATA;
  public static final int STATE_UNINITIALIZED;
  public static final int SUCCESS;
  public static final int WRITE_BLOCKING;
  public static final int WRITE_NON_BLOCKING;
  public android.media.AudioTrack(int, int, int, int, int, int) throws java.lang.IllegalArgumentException;
  public android.media.AudioTrack(int, int, int, int, int, int, int) throws java.lang.IllegalArgumentException;
  public void release();
  protected void finalize();
  public static float getMinVolume();
  public static float getMaxVolume();
  public int getSampleRate();
  public int getPlaybackRate();
  public int getAudioFormat();
  public int getStreamType();
  public int getChannelConfiguration();
  public int getChannelCount();
  public int getState();
  public int getPlayState();
  protected int getNativeFrameCount();
  public int getNotificationMarkerPosition();
  public int getPositionNotificationPeriod();
  public int getPlaybackHeadPosition();
  public static int getNativeOutputSampleRate(int);
  public static int getMinBufferSize(int, int, int);
  public int getAudioSessionId();
  public boolean getTimestamp(android.media.AudioTimestamp);
  public void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener);
  public void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener, android.os.Handler);
  public int setStereoVolume(float, float);
  public int setVolume(float);
  public int setPlaybackRate(int);
  public int setNotificationMarkerPosition(int);
  public int setPositionNotificationPeriod(int);
  public int setPlaybackHeadPosition(int);
  public int setLoopPoints(int, int, int);
  protected void setState(int);
  public void play() throws java.lang.IllegalStateException;
  public void stop() throws java.lang.IllegalStateException;
  public void pause() throws java.lang.IllegalStateException;
  public void flush();
  public int write(byte[], int, int);
  public int write(short[], int, int);
  public int write(float[], int, int, int);
  public int write(java.nio.ByteBuffer, int, int);
  public int reloadStaticData();
  public int attachAuxEffect(int);
  public int setAuxEffectSendLevel(float);
}
