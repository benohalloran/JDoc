Compiled from "Paint.java"
public class android.graphics.Paint {
  public static final int ANTI_ALIAS_FLAG;
  public static final int DEV_KERN_TEXT_FLAG;
  public static final int DITHER_FLAG;
  public static final int EMBEDDED_BITMAP_TEXT_FLAG;
  public static final int FAKE_BOLD_TEXT_FLAG;
  public static final int FILTER_BITMAP_FLAG;
  public static final int HINTING_OFF;
  public static final int HINTING_ON;
  public static final int LINEAR_TEXT_FLAG;
  public static final int STRIKE_THRU_TEXT_FLAG;
  public static final int SUBPIXEL_TEXT_FLAG;
  public static final int UNDERLINE_TEXT_FLAG;
  public android.graphics.Paint();
  public android.graphics.Paint(int);
  public android.graphics.Paint(android.graphics.Paint);
  public void reset();
  public void set(android.graphics.Paint);
  public native int getFlags();
  public native void setFlags(int);
  public native int getHinting();
  public native void setHinting(int);
  public final boolean isAntiAlias();
  public native void setAntiAlias(boolean);
  public final boolean isDither();
  public native void setDither(boolean);
  public final boolean isLinearText();
  public native void setLinearText(boolean);
  public final boolean isSubpixelText();
  public native void setSubpixelText(boolean);
  public final boolean isUnderlineText();
  public native void setUnderlineText(boolean);
  public final boolean isStrikeThruText();
  public native void setStrikeThruText(boolean);
  public final boolean isFakeBoldText();
  public native void setFakeBoldText(boolean);
  public final boolean isFilterBitmap();
  public native void setFilterBitmap(boolean);
  public android.graphics.Paint$Style getStyle();
  public void setStyle(android.graphics.Paint$Style);
  public native int getColor();
  public native void setColor(int);
  public native int getAlpha();
  public native void setAlpha(int);
  public void setARGB(int, int, int, int);
  public native float getStrokeWidth();
  public native void setStrokeWidth(float);
  public native float getStrokeMiter();
  public native void setStrokeMiter(float);
  public android.graphics.Paint$Cap getStrokeCap();
  public void setStrokeCap(android.graphics.Paint$Cap);
  public android.graphics.Paint$Join getStrokeJoin();
  public void setStrokeJoin(android.graphics.Paint$Join);
  public boolean getFillPath(android.graphics.Path, android.graphics.Path);
  public android.graphics.Shader getShader();
  public android.graphics.Shader setShader(android.graphics.Shader);
  public android.graphics.ColorFilter getColorFilter();
  public android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter);
  public android.graphics.Xfermode getXfermode();
  public android.graphics.Xfermode setXfermode(android.graphics.Xfermode);
  public android.graphics.PathEffect getPathEffect();
  public android.graphics.PathEffect setPathEffect(android.graphics.PathEffect);
  public android.graphics.MaskFilter getMaskFilter();
  public android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter);
  public android.graphics.Typeface getTypeface();
  public android.graphics.Typeface setTypeface(android.graphics.Typeface);
  public android.graphics.Rasterizer getRasterizer();
  public android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer);
  public void setShadowLayer(float, float, float, int);
  public void clearShadowLayer();
  public android.graphics.Paint$Align getTextAlign();
  public void setTextAlign(android.graphics.Paint$Align);
  public java.util.Locale getTextLocale();
  public void setTextLocale(java.util.Locale);
  public native boolean isElegantTextHeight();
  public native void setElegantTextHeight(boolean);
  public native float getTextSize();
  public native void setTextSize(float);
  public native float getTextScaleX();
  public native void setTextScaleX(float);
  public native float getTextSkewX();
  public native void setTextSkewX(float);
  public native float ascent();
  public native float descent();
  public native float getFontMetrics(android.graphics.Paint$FontMetrics);
  public android.graphics.Paint$FontMetrics getFontMetrics();
  public native int getFontMetricsInt(android.graphics.Paint$FontMetricsInt);
  public android.graphics.Paint$FontMetricsInt getFontMetricsInt();
  public float getFontSpacing();
  public float measureText(char[], int, int);
  public float measureText(java.lang.String, int, int);
  public float measureText(java.lang.String);
  public float measureText(java.lang.CharSequence, int, int);
  public int breakText(char[], int, int, float, float[]);
  public int breakText(java.lang.CharSequence, int, int, boolean, float, float[]);
  public int breakText(java.lang.String, boolean, float, float[]);
  public int getTextWidths(char[], int, int, float[]);
  public int getTextWidths(java.lang.CharSequence, int, int, float[]);
  public int getTextWidths(java.lang.String, int, int, float[]);
  public int getTextWidths(java.lang.String, float[]);
  public void getTextPath(char[], int, int, float, float, android.graphics.Path);
  public void getTextPath(java.lang.String, int, int, float, float, android.graphics.Path);
  public void getTextBounds(java.lang.String, int, int, android.graphics.Rect);
  public void getTextBounds(char[], int, int, android.graphics.Rect);
  protected void finalize() throws java.lang.Throwable;
}
