Compiled from "MockPackageManager.java"
public class android.test.mock.MockPackageManager extends android.content.pm.PackageManager {
  public android.test.mock.MockPackageManager();
  public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public java.lang.String[] currentToCanonicalPackageNames(java.lang.String[]);
  public java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[]);
  public android.content.Intent getLaunchIntentForPackage(java.lang.String);
  public android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String);
  public int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public java.util.List<android.content.pm.PermissionInfo> queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public java.util.List<android.content.pm.PermissionGroupInfo> getAllPermissionGroups(int);
  public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public java.util.List<android.content.pm.PackageInfo> getInstalledPackages(int);
  public java.util.List<android.content.pm.PackageInfo> getPackagesHoldingPermissions(java.lang.String[], int);
  public int checkPermission(java.lang.String, java.lang.String);
  public boolean addPermission(android.content.pm.PermissionInfo);
  public boolean addPermissionAsync(android.content.pm.PermissionInfo);
  public void removePermission(java.lang.String);
  public int checkSignatures(java.lang.String, java.lang.String);
  public int checkSignatures(int, int);
  public java.lang.String[] getPackagesForUid(int);
  public java.lang.String getNameForUid(int);
  public java.util.List<android.content.pm.ApplicationInfo> getInstalledApplications(int);
  public android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);
  public java.util.List<android.content.pm.ResolveInfo> queryIntentActivities(android.content.Intent, int);
  public java.util.List<android.content.pm.ResolveInfo> queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);
  public java.util.List<android.content.pm.ResolveInfo> queryBroadcastReceivers(android.content.Intent, int);
  public android.content.pm.ResolveInfo resolveService(android.content.Intent, int);
  public java.util.List<android.content.pm.ResolveInfo> queryIntentServices(android.content.Intent, int);
  public java.util.List<android.content.pm.ResolveInfo> queryIntentContentProviders(android.content.Intent, int);
  public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int);
  public java.util.List<android.content.pm.ProviderInfo> queryContentProviders(java.lang.String, int, int);
  public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public java.util.List<android.content.pm.InstrumentationInfo> queryInstrumentation(java.lang.String, int);
  public android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);
  public android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getDefaultActivityIcon();
  public android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getActivityBanner(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo);
  public android.graphics.drawable.Drawable getApplicationBanner(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);
  public android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);
  public android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo);
  public android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo);
  public java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);
  public android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo);
  public android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String, int);
  public void setInstallerPackageName(java.lang.String, java.lang.String);
  public java.lang.String getInstallerPackageName(java.lang.String);
  public void addPackageToPreferred(java.lang.String);
  public void removePackageFromPreferred(java.lang.String);
  public java.util.List<android.content.pm.PackageInfo> getPreferredPackages(int);
  public void setComponentEnabledSetting(android.content.ComponentName, int, int);
  public int getComponentEnabledSetting(android.content.ComponentName);
  public void setApplicationEnabledSetting(java.lang.String, int, int);
  public int getApplicationEnabledSetting(java.lang.String);
  public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);
  public void clearPackagePreferredActivities(java.lang.String);
  public int getPreferredActivities(java.util.List<android.content.IntentFilter>, java.util.List<android.content.ComponentName>, java.lang.String);
  public java.lang.String[] getSystemSharedLibraryNames();
  public android.content.pm.FeatureInfo[] getSystemAvailableFeatures();
  public boolean hasSystemFeature(java.lang.String);
  public boolean isSafeMode();
  public void verifyPendingInstall(int, int);
  public void extendVerificationTimeout(int, int, long);
}
