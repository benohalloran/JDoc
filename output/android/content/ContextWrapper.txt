Compiled from "ContextWrapper.java"
public class android.content.ContextWrapper extends android.content.Context {
  public android.content.ContextWrapper(android.content.Context);
  protected void attachBaseContext(android.content.Context);
  public android.content.Context getBaseContext();
  public android.content.res.AssetManager getAssets();
  public android.content.res.Resources getResources();
  public android.content.pm.PackageManager getPackageManager();
  public android.content.ContentResolver getContentResolver();
  public android.os.Looper getMainLooper();
  public android.content.Context getApplicationContext();
  public void setTheme(int);
  public android.content.res.Resources$Theme getTheme();
  public java.lang.ClassLoader getClassLoader();
  public java.lang.String getPackageName();
  public android.content.pm.ApplicationInfo getApplicationInfo();
  public java.lang.String getPackageResourcePath();
  public java.lang.String getPackageCodePath();
  public android.content.SharedPreferences getSharedPreferences(java.lang.String, int);
  public java.io.FileInputStream openFileInput(java.lang.String) throws java.io.FileNotFoundException;
  public java.io.FileOutputStream openFileOutput(java.lang.String, int) throws java.io.FileNotFoundException;
  public boolean deleteFile(java.lang.String);
  public java.io.File getFileStreamPath(java.lang.String);
  public java.lang.String[] fileList();
  public java.io.File getFilesDir();
  public java.io.File getExternalFilesDir(java.lang.String);
  public java.io.File[] getExternalFilesDirs(java.lang.String);
  public java.io.File getObbDir();
  public java.io.File[] getObbDirs();
  public java.io.File getCacheDir();
  public java.io.File getExternalCacheDir();
  public java.io.File[] getExternalCacheDirs();
  public java.io.File[] getExternalMediaDirs();
  public java.io.File getDir(java.lang.String, int);
  public android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory);
  public android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory, android.database.DatabaseErrorHandler);
  public boolean deleteDatabase(java.lang.String);
  public java.io.File getDatabasePath(java.lang.String);
  public java.lang.String[] databaseList();
  public android.graphics.drawable.Drawable getWallpaper();
  public android.graphics.drawable.Drawable peekWallpaper();
  public int getWallpaperDesiredMinimumWidth();
  public int getWallpaperDesiredMinimumHeight();
  public void setWallpaper(android.graphics.Bitmap) throws java.io.IOException;
  public void setWallpaper(java.io.InputStream) throws java.io.IOException;
  public void clearWallpaper() throws java.io.IOException;
  public void startActivity(android.content.Intent);
  public void startActivity(android.content.Intent, android.os.Bundle);
  public void startActivities(android.content.Intent[]);
  public void startActivities(android.content.Intent[], android.os.Bundle);
  public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException;
  public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException;
  public void sendBroadcast(android.content.Intent);
  public void sendBroadcast(android.content.Intent, java.lang.String);
  public void sendOrderedBroadcast(android.content.Intent, java.lang.String);
  public void sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);
  public void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle);
  public void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String);
  public void sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);
  public void sendStickyBroadcast(android.content.Intent);
  public void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);
  public void removeStickyBroadcast(android.content.Intent);
  public void sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);
  public void sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);
  public void removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);
  public android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter);
  public android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler);
  public void unregisterReceiver(android.content.BroadcastReceiver);
  public android.content.ComponentName startService(android.content.Intent);
  public boolean stopService(android.content.Intent);
  public boolean bindService(android.content.Intent, android.content.ServiceConnection, int);
  public void unbindService(android.content.ServiceConnection);
  public boolean startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle);
  public java.lang.Object getSystemService(java.lang.String);
  public int checkPermission(java.lang.String, int, int);
  public int checkCallingPermission(java.lang.String);
  public int checkCallingOrSelfPermission(java.lang.String);
  public void enforcePermission(java.lang.String, int, int, java.lang.String);
  public void enforceCallingPermission(java.lang.String, java.lang.String);
  public void enforceCallingOrSelfPermission(java.lang.String, java.lang.String);
  public void grantUriPermission(java.lang.String, android.net.Uri, int);
  public void revokeUriPermission(android.net.Uri, int);
  public int checkUriPermission(android.net.Uri, int, int, int);
  public int checkCallingUriPermission(android.net.Uri, int);
  public int checkCallingOrSelfUriPermission(android.net.Uri, int);
  public int checkUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int);
  public void enforceUriPermission(android.net.Uri, int, int, int, java.lang.String);
  public void enforceCallingUriPermission(android.net.Uri, int, java.lang.String);
  public void enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String);
  public void enforceUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int, java.lang.String);
  public android.content.Context createPackageContext(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.Context createConfigurationContext(android.content.res.Configuration);
  public android.content.Context createDisplayContext(android.view.Display);
  public boolean isRestricted();
}
