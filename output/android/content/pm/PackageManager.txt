Compiled from "PackageManager.java"
public abstract class android.content.pm.PackageManager {
  public static final int COMPONENT_ENABLED_STATE_DEFAULT;
  public static final int COMPONENT_ENABLED_STATE_DISABLED;
  public static final int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED;
  public static final int COMPONENT_ENABLED_STATE_DISABLED_USER;
  public static final int COMPONENT_ENABLED_STATE_ENABLED;
  public static final int DONT_KILL_APP;
  public static final java.lang.String EXTRA_VERIFICATION_ID;
  public static final java.lang.String EXTRA_VERIFICATION_RESULT;
  public static final java.lang.String FEATURE_APP_WIDGETS;
  public static final java.lang.String FEATURE_AUDIO_LOW_LATENCY;
  public static final java.lang.String FEATURE_BACKUP;
  public static final java.lang.String FEATURE_BLUETOOTH;
  public static final java.lang.String FEATURE_BLUETOOTH_LE;
  public static final java.lang.String FEATURE_CAMERA;
  public static final java.lang.String FEATURE_CAMERA_ANY;
  public static final java.lang.String FEATURE_CAMERA_AUTOFOCUS;
  public static final java.lang.String FEATURE_CAMERA_EXTERNAL;
  public static final java.lang.String FEATURE_CAMERA_FLASH;
  public static final java.lang.String FEATURE_CAMERA_FRONT;
  public static final java.lang.String FEATURE_CONSUMER_IR;
  public static final java.lang.String FEATURE_DEVICE_ADMIN;
  public static final java.lang.String FEATURE_FAKETOUCH;
  public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT;
  public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND;
  public static final java.lang.String FEATURE_HOME_SCREEN;
  public static final java.lang.String FEATURE_INPUT_METHODS;
  public static final java.lang.String FEATURE_LEANBACK;
  public static final java.lang.String FEATURE_LIVE_WALLPAPER;
  public static final java.lang.String FEATURE_LOCATION;
  public static final java.lang.String FEATURE_LOCATION_GPS;
  public static final java.lang.String FEATURE_LOCATION_NETWORK;
  public static final java.lang.String FEATURE_MANAGED_PROFILES;
  public static final java.lang.String FEATURE_MICROPHONE;
  public static final java.lang.String FEATURE_NFC;
  public static final java.lang.String FEATURE_NFC_HOST_CARD_EMULATION;
  public static final java.lang.String FEATURE_PRINTING;
  public static final java.lang.String FEATURE_SCREEN_LANDSCAPE;
  public static final java.lang.String FEATURE_SCREEN_PORTRAIT;
  public static final java.lang.String FEATURE_SENSOR_ACCELEROMETER;
  public static final java.lang.String FEATURE_SENSOR_BAROMETER;
  public static final java.lang.String FEATURE_SENSOR_COMPASS;
  public static final java.lang.String FEATURE_SENSOR_GYROSCOPE;
  public static final java.lang.String FEATURE_SENSOR_HEART_RATE;
  public static final java.lang.String FEATURE_SENSOR_LIGHT;
  public static final java.lang.String FEATURE_SENSOR_PROXIMITY;
  public static final java.lang.String FEATURE_SENSOR_STEP_COUNTER;
  public static final java.lang.String FEATURE_SENSOR_STEP_DETECTOR;
  public static final java.lang.String FEATURE_SIP;
  public static final java.lang.String FEATURE_SIP_VOIP;
  public static final java.lang.String FEATURE_TELEPHONY;
  public static final java.lang.String FEATURE_TELEPHONY_CDMA;
  public static final java.lang.String FEATURE_TELEPHONY_GSM;
  public static final java.lang.String FEATURE_TELEVISION;
  public static final java.lang.String FEATURE_TOUCHSCREEN;
  public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH;
  public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT;
  public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND;
  public static final java.lang.String FEATURE_USB_ACCESSORY;
  public static final java.lang.String FEATURE_USB_HOST;
  public static final java.lang.String FEATURE_WATCH;
  public static final java.lang.String FEATURE_WEBVIEW;
  public static final java.lang.String FEATURE_WIFI;
  public static final java.lang.String FEATURE_WIFI_DIRECT;
  public static final int GET_ACTIVITIES;
  public static final int GET_CONFIGURATIONS;
  public static final int GET_DISABLED_COMPONENTS;
  public static final int GET_DISABLED_UNTIL_USED_COMPONENTS;
  public static final int GET_GIDS;
  public static final int GET_INSTRUMENTATION;
  public static final int GET_INTENT_FILTERS;
  public static final int GET_META_DATA;
  public static final int GET_PERMISSIONS;
  public static final int GET_PROVIDERS;
  public static final int GET_RECEIVERS;
  public static final int GET_RESOLVED_FILTER;
  public static final int GET_SERVICES;
  public static final int GET_SHARED_LIBRARY_FILES;
  public static final int GET_SIGNATURES;
  public static final int GET_UNINSTALLED_PACKAGES;
  public static final int GET_URI_PERMISSION_PATTERNS;
  public static final int MATCH_DEFAULT_ONLY;
  public static final long MAXIMUM_VERIFICATION_TIMEOUT;
  public static final int PERMISSION_DENIED;
  public static final int PERMISSION_GRANTED;
  public static final int SIGNATURE_FIRST_NOT_SIGNED;
  public static final int SIGNATURE_MATCH;
  public static final int SIGNATURE_NEITHER_SIGNED;
  public static final int SIGNATURE_NO_MATCH;
  public static final int SIGNATURE_SECOND_NOT_SIGNED;
  public static final int SIGNATURE_UNKNOWN_PACKAGE;
  public static final int VERIFICATION_ALLOW;
  public static final int VERIFICATION_REJECT;
  public android.content.pm.PackageManager();
  public abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract java.lang.String[] currentToCanonicalPackageNames(java.lang.String[]);
  public abstract java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[]);
  public abstract android.content.Intent getLaunchIntentForPackage(java.lang.String);
  public abstract android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String);
  public abstract int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract java.util.List<android.content.pm.PermissionInfo> queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract java.util.List<android.content.pm.PermissionGroupInfo> getAllPermissionGroups(int);
  public abstract android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract java.util.List<android.content.pm.PackageInfo> getInstalledPackages(int);
  public abstract java.util.List<android.content.pm.PackageInfo> getPackagesHoldingPermissions(java.lang.String[], int);
  public abstract int checkPermission(java.lang.String, java.lang.String);
  public abstract boolean addPermission(android.content.pm.PermissionInfo);
  public abstract boolean addPermissionAsync(android.content.pm.PermissionInfo);
  public abstract void removePermission(java.lang.String);
  public abstract int checkSignatures(java.lang.String, java.lang.String);
  public abstract int checkSignatures(int, int);
  public abstract java.lang.String[] getPackagesForUid(int);
  public abstract java.lang.String getNameForUid(int);
  public abstract java.util.List<android.content.pm.ApplicationInfo> getInstalledApplications(int);
  public abstract java.lang.String[] getSystemSharedLibraryNames();
  public abstract android.content.pm.FeatureInfo[] getSystemAvailableFeatures();
  public abstract boolean hasSystemFeature(java.lang.String);
  public abstract android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);
  public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentActivities(android.content.Intent, int);
  public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);
  public abstract java.util.List<android.content.pm.ResolveInfo> queryBroadcastReceivers(android.content.Intent, int);
  public abstract android.content.pm.ResolveInfo resolveService(android.content.Intent, int);
  public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentServices(android.content.Intent, int);
  public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentContentProviders(android.content.Intent, int);
  public abstract android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int);
  public abstract java.util.List<android.content.pm.ProviderInfo> queryContentProviders(java.lang.String, int, int);
  public abstract android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract java.util.List<android.content.pm.InstrumentationInfo> queryInstrumentation(java.lang.String, int);
  public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);
  public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getActivityBanner(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getDefaultActivityIcon();
  public abstract android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);
  public abstract android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo);
  public abstract android.graphics.drawable.Drawable getApplicationBanner(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);
  public abstract android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo);
  public abstract android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo);
  public abstract java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);
  public abstract android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException;
  public abstract android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;
  public android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String, int);
  public abstract void verifyPendingInstall(int, int);
  public abstract void extendVerificationTimeout(int, int, long);
  public abstract void setInstallerPackageName(java.lang.String, java.lang.String);
  public abstract java.lang.String getInstallerPackageName(java.lang.String);
  public abstract void addPackageToPreferred(java.lang.String);
  public abstract void removePackageFromPreferred(java.lang.String);
  public abstract java.util.List<android.content.pm.PackageInfo> getPreferredPackages(int);
  public abstract void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);
  public abstract void clearPackagePreferredActivities(java.lang.String);
  public abstract int getPreferredActivities(java.util.List<android.content.IntentFilter>, java.util.List<android.content.ComponentName>, java.lang.String);
  public abstract void setComponentEnabledSetting(android.content.ComponentName, int, int);
  public abstract int getComponentEnabledSetting(android.content.ComponentName);
  public abstract void setApplicationEnabledSetting(java.lang.String, int, int);
  public abstract int getApplicationEnabledSetting(java.lang.String);
  public abstract boolean isSafeMode();
}
