Compiled from "CaptureRequest.java"
public final class android.hardware.camera2.CaptureRequest extends android.hardware.camera2.CameraMetadata<android.hardware.camera2.CaptureRequest$Key<?>> implements android.os.Parcelable {
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Boolean> BLACK_LEVEL_LOCK;
  public static final android.hardware.camera2.CaptureRequest$Key<android.hardware.camera2.params.RggbChannelVector> COLOR_CORRECTION_GAINS;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> COLOR_CORRECTION_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<android.hardware.camera2.params.ColorSpaceTransform> COLOR_CORRECTION_TRANSFORM;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AE_ANTIBANDING_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AE_EXPOSURE_COMPENSATION;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Boolean> CONTROL_AE_LOCK;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AE_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AE_PRECAPTURE_TRIGGER;
  public static final android.hardware.camera2.CaptureRequest$Key<android.hardware.camera2.params.MeteringRectangle[]> CONTROL_AE_REGIONS;
  public static final android.hardware.camera2.CaptureRequest$Key<android.util.Range<java.lang.Integer>> CONTROL_AE_TARGET_FPS_RANGE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AF_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<android.hardware.camera2.params.MeteringRectangle[]> CONTROL_AF_REGIONS;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AF_TRIGGER;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Boolean> CONTROL_AWB_LOCK;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_AWB_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<android.hardware.camera2.params.MeteringRectangle[]> CONTROL_AWB_REGIONS;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_CAPTURE_INTENT;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_EFFECT_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_SCENE_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> CONTROL_VIDEO_STABILIZATION_MODE;
  public static final android.os.Parcelable$Creator<android.hardware.camera2.CaptureRequest> CREATOR;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> EDGE_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> FLASH_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> HOT_PIXEL_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<android.location.Location> JPEG_GPS_LOCATION;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> JPEG_ORIENTATION;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Byte> JPEG_QUALITY;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Byte> JPEG_THUMBNAIL_QUALITY;
  public static final android.hardware.camera2.CaptureRequest$Key<android.util.Size> JPEG_THUMBNAIL_SIZE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Float> LENS_APERTURE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Float> LENS_FILTER_DENSITY;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Float> LENS_FOCAL_LENGTH;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Float> LENS_FOCUS_DISTANCE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> LENS_OPTICAL_STABILIZATION_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> NOISE_REDUCTION_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<android.graphics.Rect> SCALER_CROP_REGION;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Long> SENSOR_EXPOSURE_TIME;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Long> SENSOR_FRAME_DURATION;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> SENSOR_SENSITIVITY;
  public static final android.hardware.camera2.CaptureRequest$Key<int[]> SENSOR_TEST_PATTERN_DATA;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> SENSOR_TEST_PATTERN_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> SHADING_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> STATISTICS_FACE_DETECT_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Boolean> STATISTICS_HOT_PIXEL_MAP_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> STATISTICS_LENS_SHADING_MAP_MODE;
  public static final android.hardware.camera2.CaptureRequest$Key<android.hardware.camera2.params.TonemapCurve> TONEMAP_CURVE;
  public static final android.hardware.camera2.CaptureRequest$Key<java.lang.Integer> TONEMAP_MODE;
  android.hardware.camera2.CaptureRequest();
  public <T extends java/lang/Object> T get(android.hardware.camera2.CaptureRequest$Key<T>);
  public java.util.List<android.hardware.camera2.CaptureRequest$Key<?>> getKeys();
  public java.lang.Object getTag();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public int describeContents();
  public void writeToParcel(android.os.Parcel, int);
  static {};
}
