Compiled from "Window.java"
public abstract class android.view.Window {
  protected static final int DEFAULT_FEATURES;
  public static final int FEATURE_ACTION_BAR;
  public static final int FEATURE_ACTION_BAR_OVERLAY;
  public static final int FEATURE_ACTION_MODE_OVERLAY;
  public static final int FEATURE_CONTENT_TRANSITIONS;
  public static final int FEATURE_CONTEXT_MENU;
  public static final int FEATURE_CUSTOM_TITLE;
  public static final int FEATURE_INDETERMINATE_PROGRESS;
  public static final int FEATURE_LEFT_ICON;
  public static final int FEATURE_NO_TITLE;
  public static final int FEATURE_OPTIONS_PANEL;
  public static final int FEATURE_PROGRESS;
  public static final int FEATURE_RIGHT_ICON;
  public static final int FEATURE_SWIPE_TO_DISMISS;
  public static final int ID_ANDROID_CONTENT;
  public static final int PROGRESS_END;
  public static final int PROGRESS_INDETERMINATE_OFF;
  public static final int PROGRESS_INDETERMINATE_ON;
  public static final int PROGRESS_SECONDARY_END;
  public static final int PROGRESS_SECONDARY_START;
  public static final int PROGRESS_START;
  public static final int PROGRESS_VISIBILITY_OFF;
  public static final int PROGRESS_VISIBILITY_ON;
  public android.view.Window(android.content.Context);
  public final android.content.Context getContext();
  public final android.content.res.TypedArray getWindowStyle();
  public void setContainer(android.view.Window);
  public final android.view.Window getContainer();
  public final boolean hasChildren();
  public void setWindowManager(android.view.WindowManager, android.os.IBinder, java.lang.String);
  public void setWindowManager(android.view.WindowManager, android.os.IBinder, java.lang.String, boolean);
  public android.view.WindowManager getWindowManager();
  public void setCallback(android.view.Window$Callback);
  public final android.view.Window$Callback getCallback();
  public abstract void takeSurface(android.view.SurfaceHolder$Callback2);
  public abstract void takeInputQueue(android.view.InputQueue$Callback);
  public abstract boolean isFloating();
  public void setLayout(int, int);
  public void setGravity(int);
  public void setType(int);
  public void setFormat(int);
  public void setWindowAnimations(int);
  public void setSoftInputMode(int);
  public void addFlags(int);
  public void clearFlags(int);
  public void setFlags(int, int);
  public void setDimAmount(float);
  public void setAttributes(android.view.WindowManager$LayoutParams);
  public final android.view.WindowManager$LayoutParams getAttributes();
  protected final int getForcedWindowFlags();
  protected final boolean hasSoftInputMode();
  public boolean requestFeature(int);
  public final void makeActive();
  public final boolean isActive();
  public android.view.View findViewById(int);
  public abstract void setContentView(int);
  public abstract void setContentView(android.view.View);
  public abstract void setContentView(android.view.View, android.view.ViewGroup$LayoutParams);
  public abstract void addContentView(android.view.View, android.view.ViewGroup$LayoutParams);
  public abstract android.view.View getCurrentFocus();
  public abstract android.view.LayoutInflater getLayoutInflater();
  public abstract void setTitle(java.lang.CharSequence);
  public abstract void setTitleColor(int);
  public abstract void openPanel(int, android.view.KeyEvent);
  public abstract void closePanel(int);
  public abstract void togglePanel(int, android.view.KeyEvent);
  public abstract void invalidatePanelMenu(int);
  public abstract boolean performPanelShortcut(int, int, android.view.KeyEvent, int);
  public abstract boolean performPanelIdentifierAction(int, int, int);
  public abstract void closeAllPanels();
  public abstract boolean performContextMenuIdentifierAction(int, int);
  public abstract void onConfigurationChanged(android.content.res.Configuration);
  public void setBackgroundDrawableResource(int);
  public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable);
  public abstract void setFeatureDrawableResource(int, int);
  public abstract void setFeatureDrawableUri(int, android.net.Uri);
  public abstract void setFeatureDrawable(int, android.graphics.drawable.Drawable);
  public abstract void setFeatureDrawableAlpha(int, int);
  public abstract void setFeatureInt(int, int);
  public abstract void takeKeyEvents(boolean);
  public abstract boolean superDispatchKeyEvent(android.view.KeyEvent);
  public abstract boolean superDispatchKeyShortcutEvent(android.view.KeyEvent);
  public abstract boolean superDispatchTouchEvent(android.view.MotionEvent);
  public abstract boolean superDispatchTrackballEvent(android.view.MotionEvent);
  public abstract boolean superDispatchGenericMotionEvent(android.view.MotionEvent);
  public abstract android.view.View getDecorView();
  public abstract android.view.View peekDecorView();
  public abstract android.os.Bundle saveHierarchyState();
  public abstract void restoreHierarchyState(android.os.Bundle);
  protected abstract void onActive();
  protected final int getFeatures();
  public boolean hasFeature(int);
  protected final int getLocalFeatures();
  protected void setDefaultWindowFormat(int);
  public abstract void setChildDrawable(int, android.graphics.drawable.Drawable);
  public abstract void setChildInt(int, int);
  public abstract boolean isShortcutKey(int, android.view.KeyEvent);
  public abstract void setVolumeControlStream(int);
  public abstract int getVolumeControlStream();
  public void setUiOptions(int);
  public void setUiOptions(int, int);
  public void setIcon(int);
  public void setLogo(int);
  public void setLocalFocus(boolean, boolean);
  public void injectInputEvent(android.view.InputEvent);
  public android.transition.TransitionManager getTransitionManager();
  public void setTransitionManager(android.transition.TransitionManager);
  public android.transition.Scene getContentScene();
  public void setEnterTransition(android.transition.Transition);
  public void setExitTransition(android.transition.Transition);
  public android.transition.Transition getEnterTransition();
  public android.transition.Transition getExitTransition();
  public void setSharedElementEnterTransition(android.transition.Transition);
  public android.transition.Transition getSharedElementEnterTransition();
  public void setSharedElementExitTransition(android.transition.Transition);
  public android.transition.Transition getSharedElementExitTransition();
  public void setAllowEnterTransitionOverlap(boolean);
  public boolean getAllowEnterTransitionOverlap();
  public void setAllowExitTransitionOverlap(boolean);
  public boolean getAllowExitTransitionOverlap();
  public abstract int getStatusBarColor();
  public abstract void setStatusBarColor(int);
  public abstract int getNavigationBarColor();
  public abstract void setNavigationBarColor(int);
}
