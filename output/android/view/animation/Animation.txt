Compiled from "Animation.java"
public abstract class android.view.animation.Animation implements java.lang.Cloneable {
  public static final int ABSOLUTE;
  public static final int INFINITE;
  public static final int RELATIVE_TO_PARENT;
  public static final int RELATIVE_TO_SELF;
  public static final int RESTART;
  public static final int REVERSE;
  public static final int START_ON_FIRST_FRAME;
  public static final int ZORDER_BOTTOM;
  public static final int ZORDER_NORMAL;
  public static final int ZORDER_TOP;
  public android.view.animation.Animation();
  public android.view.animation.Animation(android.content.Context, android.util.AttributeSet);
  protected android.view.animation.Animation clone() throws java.lang.CloneNotSupportedException;
  public void reset();
  public void cancel();
  public boolean isInitialized();
  public void initialize(int, int, int, int);
  public void setInterpolator(android.content.Context, int);
  public void setInterpolator(android.view.animation.Interpolator);
  public void setStartOffset(long);
  public void setDuration(long);
  public void restrictDuration(long);
  public void scaleCurrentDuration(float);
  public void setStartTime(long);
  public void start();
  public void startNow();
  public void setRepeatMode(int);
  public void setRepeatCount(int);
  public boolean isFillEnabled();
  public void setFillEnabled(boolean);
  public void setFillBefore(boolean);
  public void setFillAfter(boolean);
  public void setZAdjustment(int);
  public void setBackgroundColor(int);
  protected float getScaleFactor();
  public void setDetachWallpaper(boolean);
  public android.view.animation.Interpolator getInterpolator();
  public long getStartTime();
  public long getDuration();
  public long getStartOffset();
  public int getRepeatMode();
  public int getRepeatCount();
  public boolean getFillBefore();
  public boolean getFillAfter();
  public int getZAdjustment();
  public int getBackgroundColor();
  public boolean getDetachWallpaper();
  public boolean willChangeTransformationMatrix();
  public boolean willChangeBounds();
  public void setAnimationListener(android.view.animation.Animation$AnimationListener);
  protected void ensureInterpolator();
  public long computeDurationHint();
  public boolean getTransformation(long, android.view.animation.Transformation);
  public boolean getTransformation(long, android.view.animation.Transformation, float);
  public boolean hasStarted();
  public boolean hasEnded();
  protected void applyTransformation(float, android.view.animation.Transformation);
  protected float resolveSize(int, float, int, int);
  protected void finalize() throws java.lang.Throwable;
  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
}
