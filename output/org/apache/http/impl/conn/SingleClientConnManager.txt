Compiled from "SingleClientConnManager.java"
public class org.apache.http.impl.conn.SingleClientConnManager implements org.apache.http.conn.ClientConnectionManager {
  public static final java.lang.String MISUSE_MESSAGE;
  protected boolean alwaysShutDown;
  protected org.apache.http.conn.ClientConnectionOperator connOperator;
  protected long connectionExpiresTime;
  protected volatile boolean isShutDown;
  protected long lastReleaseTime;
  protected org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn;
  protected org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;
  protected org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry;
  public org.apache.http.impl.conn.SingleClientConnManager(org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry);
  protected void finalize() throws java.lang.Throwable;
  public org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry();
  protected org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry);
  protected final void assertStillUp() throws java.lang.IllegalStateException;
  public final org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
  public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
  public void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit);
  public void closeExpiredConnections();
  public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
  public void shutdown();
  protected void revokeConnection();
}
